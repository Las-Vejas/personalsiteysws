---
---
<div class="flex justify-center items-end ">
  <div class="flex flex-col w-full max-w-xl gap-4 bg-gray-300/15 p-5 rounded-xl border border-gray-400/50">
    <div class="font-bold font-martian text-xl text-center">Contact form</div>

    <form id="contactForm" class="space-y-3">
      <label class="block">
        <span class="block mb-1">Your name:</span>
        <input type="text" name="name" placeholder="Enter your name" required
          class="block w-full rounded-md border border-gray-500 bg-white/5 px-3 py-1.5 text-base outline-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:outline-indigo-500 sm:text-sm"/>
      </label>

      <label class="block">
        <span class="block mb-1">Your email:</span>
        <input type="email" name="email" placeholder="example@vejas.zip" required
          class="block w-full rounded-md border border-gray-500 bg-white/5 px-3 py-1.5 text-base outline-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:outline-indigo-500 sm:text-sm"/>
      </label>

      <label class="block">
        <span class="block mb-1">Your message:</span>
        <textarea name="message" placeholder="Your message goes here..." rows="6" required
          class="block w-full rounded-md border border-gray-500 bg-white/5 px-3 py-1.5 text-base outline-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:outline-indigo-500 sm:text-sm"/>
      </label>

      <button type="submit" class="self-center bg-blue-500 text-white rounded-md px-4 py-2 hover:bg-blue-600 hover:shadow-2xl">Send</button>
    </form>

    <p id="formMessage" class="text-center mt-2 text-green-600 hidden">Message sent!</p>

    <script lang="ts">
      const form = document.getElementById('contactForm');
      const msg = document.getElementById('formMessage');

     if (!form || !(form instanceof HTMLFormElement)) throw new Error("Form not found");

     form.addEventListener('submit', async (e) => {
      e.preventDefault();

       // TypeScript already knows `form` is HTMLFormElement
       const data = Object.fromEntries(new FormData(form).entries());

       const res = await fetch("/api/send-to-slack", {
         method: "POST",
         headers: { "Content-Type": "application/json" },
         body: JSON.stringify(data)
       });

       if (res.ok) {
         msg?.classList.remove('hidden');
         form.reset();
       } else {
         alert("Error sending message.");
         console.error(await res.text());
       }
     });
    </script>

</div>
</div>
